/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.consensys.eventeum;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class EventBlock extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3360333280331309414L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventBlock\",\"namespace\":\"net.consensys.eventeum\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"details\",\"type\":{\"type\":\"record\",\"name\":\"ContractEventDetails\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"filterId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"nodeName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"indexedParameters\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"StringParameter\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},{\"type\":\"record\",\"name\":\"NumberParameter\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.math.BigInteger\"}]}]}},{\"name\":\"nonIndexedParameters\",\"type\":{\"type\":\"array\",\"items\":[\"StringParameter\",\"NumberParameter\"]}},{\"name\":\"transactionHash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"logIndex\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.math.BigInteger\"},{\"name\":\"blockNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.math.BigInteger\"},{\"name\":\"blockHash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"address\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"ContractEventStatus\",\"symbols\":[\"UNCONFIRMED\",\"CONFIRMED\",\"INVALIDATED\"]}},{\"name\":\"eventSpecificationSignature\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"networkName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"detailsBlock\",\"type\":{\"type\":\"record\",\"name\":\"BlockDetails\",\"fields\":[{\"name\":\"number\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.math.BigInteger\"},{\"name\":\"hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"java-class\":\"java.math.BigInteger\"},{\"name\":\"nodeName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"retries\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EventBlock> ENCODER =
      new BinaryMessageEncoder<EventBlock>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EventBlock> DECODER =
      new BinaryMessageDecoder<EventBlock>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EventBlock> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EventBlock> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EventBlock> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EventBlock>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EventBlock to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EventBlock from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EventBlock instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EventBlock fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public String id;
  @Deprecated public String type;
  @Deprecated public net.consensys.eventeum.ContractEventDetails details;
  @Deprecated public net.consensys.eventeum.BlockDetails detailsBlock;
  @Deprecated public int retries;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventBlock() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param type The new value for type
   * @param details The new value for details
   * @param detailsBlock The new value for detailsBlock
   * @param retries The new value for retries
   */
  public EventBlock(String id, String type, net.consensys.eventeum.ContractEventDetails details, net.consensys.eventeum.BlockDetails detailsBlock, Integer retries) {
    this.id = id;
    this.type = type;
    this.details = details;
    this.detailsBlock = detailsBlock;
    this.retries = retries;
  }

  public SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return type;
    case 2: return details;
    case 3: return detailsBlock;
    case 4: return retries;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: id = (String)value$; break;
    case 1: type = (String)value$; break;
    case 2: details = (net.consensys.eventeum.ContractEventDetails)value$; break;
    case 3: detailsBlock = (net.consensys.eventeum.BlockDetails)value$; break;
    case 4: retries = (Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'details' field.
   * @return The value of the 'details' field.
   */
  public net.consensys.eventeum.ContractEventDetails getDetails() {
    return details;
  }


  /**
   * Sets the value of the 'details' field.
   * @param value the value to set.
   */
  public void setDetails(net.consensys.eventeum.ContractEventDetails value) {
    this.details = value;
  }

  /**
   * Gets the value of the 'detailsBlock' field.
   * @return The value of the 'detailsBlock' field.
   */
  public net.consensys.eventeum.BlockDetails getDetailsBlock() {
    return detailsBlock;
  }


  /**
   * Sets the value of the 'detailsBlock' field.
   * @param value the value to set.
   */
  public void setDetailsBlock(net.consensys.eventeum.BlockDetails value) {
    this.detailsBlock = value;
  }

  /**
   * Gets the value of the 'retries' field.
   * @return The value of the 'retries' field.
   */
  public int getRetries() {
    return retries;
  }


  /**
   * Sets the value of the 'retries' field.
   * @param value the value to set.
   */
  public void setRetries(int value) {
    this.retries = value;
  }

  /**
   * Creates a new EventBlock RecordBuilder.
   * @return A new EventBlock RecordBuilder
   */
  public static net.consensys.eventeum.EventBlock.Builder newBuilder() {
    return new net.consensys.eventeum.EventBlock.Builder();
  }

  /**
   * Creates a new EventBlock RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventBlock RecordBuilder
   */
  public static net.consensys.eventeum.EventBlock.Builder newBuilder(net.consensys.eventeum.EventBlock.Builder other) {
    if (other == null) {
      return new net.consensys.eventeum.EventBlock.Builder();
    } else {
      return new net.consensys.eventeum.EventBlock.Builder(other);
    }
  }

  /**
   * Creates a new EventBlock RecordBuilder by copying an existing EventBlock instance.
   * @param other The existing instance to copy.
   * @return A new EventBlock RecordBuilder
   */
  public static net.consensys.eventeum.EventBlock.Builder newBuilder(net.consensys.eventeum.EventBlock other) {
    if (other == null) {
      return new net.consensys.eventeum.EventBlock.Builder();
    } else {
      return new net.consensys.eventeum.EventBlock.Builder(other);
    }
  }

  /**
   * RecordBuilder for EventBlock instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventBlock>
    implements org.apache.avro.data.RecordBuilder<EventBlock> {

    private String id;
    private String type;
    private net.consensys.eventeum.ContractEventDetails details;
    private net.consensys.eventeum.ContractEventDetails.Builder detailsBuilder;
    private net.consensys.eventeum.BlockDetails detailsBlock;
    private net.consensys.eventeum.BlockDetails.Builder detailsBlockBuilder;
    private int retries;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.consensys.eventeum.EventBlock.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.details)) {
        this.details = data().deepCopy(fields()[2].schema(), other.details);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasDetailsBuilder()) {
        this.detailsBuilder = net.consensys.eventeum.ContractEventDetails.newBuilder(other.getDetailsBuilder());
      }
      if (isValidValue(fields()[3], other.detailsBlock)) {
        this.detailsBlock = data().deepCopy(fields()[3].schema(), other.detailsBlock);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasDetailsBlockBuilder()) {
        this.detailsBlockBuilder = net.consensys.eventeum.BlockDetails.newBuilder(other.getDetailsBlockBuilder());
      }
      if (isValidValue(fields()[4], other.retries)) {
        this.retries = data().deepCopy(fields()[4].schema(), other.retries);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing EventBlock instance
     * @param other The existing instance to copy.
     */
    private Builder(net.consensys.eventeum.EventBlock other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.details)) {
        this.details = data().deepCopy(fields()[2].schema(), other.details);
        fieldSetFlags()[2] = true;
      }
      this.detailsBuilder = null;
      if (isValidValue(fields()[3], other.detailsBlock)) {
        this.detailsBlock = data().deepCopy(fields()[3].schema(), other.detailsBlock);
        fieldSetFlags()[3] = true;
      }
      this.detailsBlockBuilder = null;
      if (isValidValue(fields()[4], other.retries)) {
        this.retries = data().deepCopy(fields()[4].schema(), other.retries);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder setId(String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder setType(String value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'details' field.
      * @return The value.
      */
    public net.consensys.eventeum.ContractEventDetails getDetails() {
      return details;
    }


    /**
      * Sets the value of the 'details' field.
      * @param value The value of 'details'.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder setDetails(net.consensys.eventeum.ContractEventDetails value) {
      validate(fields()[2], value);
      this.detailsBuilder = null;
      this.details = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'details' field has been set.
      * @return True if the 'details' field has been set, false otherwise.
      */
    public boolean hasDetails() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'details' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.consensys.eventeum.ContractEventDetails.Builder getDetailsBuilder() {
      if (detailsBuilder == null) {
        if (hasDetails()) {
          setDetailsBuilder(net.consensys.eventeum.ContractEventDetails.newBuilder(details));
        } else {
          setDetailsBuilder(net.consensys.eventeum.ContractEventDetails.newBuilder());
        }
      }
      return detailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'details' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.consensys.eventeum.EventBlock.Builder setDetailsBuilder(net.consensys.eventeum.ContractEventDetails.Builder value) {
      clearDetails();
      detailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'details' field has an active Builder instance
     * @return True if the 'details' field has an active Builder instance
     */
    public boolean hasDetailsBuilder() {
      return detailsBuilder != null;
    }

    /**
      * Clears the value of the 'details' field.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder clearDetails() {
      details = null;
      detailsBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'detailsBlock' field.
      * @return The value.
      */
    public net.consensys.eventeum.BlockDetails getDetailsBlock() {
      return detailsBlock;
    }


    /**
      * Sets the value of the 'detailsBlock' field.
      * @param value The value of 'detailsBlock'.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder setDetailsBlock(net.consensys.eventeum.BlockDetails value) {
      validate(fields()[3], value);
      this.detailsBlockBuilder = null;
      this.detailsBlock = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'detailsBlock' field has been set.
      * @return True if the 'detailsBlock' field has been set, false otherwise.
      */
    public boolean hasDetailsBlock() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'detailsBlock' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.consensys.eventeum.BlockDetails.Builder getDetailsBlockBuilder() {
      if (detailsBlockBuilder == null) {
        if (hasDetailsBlock()) {
          setDetailsBlockBuilder(net.consensys.eventeum.BlockDetails.newBuilder(detailsBlock));
        } else {
          setDetailsBlockBuilder(net.consensys.eventeum.BlockDetails.newBuilder());
        }
      }
      return detailsBlockBuilder;
    }

    /**
     * Sets the Builder instance for the 'detailsBlock' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.consensys.eventeum.EventBlock.Builder setDetailsBlockBuilder(net.consensys.eventeum.BlockDetails.Builder value) {
      clearDetailsBlock();
      detailsBlockBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'detailsBlock' field has an active Builder instance
     * @return True if the 'detailsBlock' field has an active Builder instance
     */
    public boolean hasDetailsBlockBuilder() {
      return detailsBlockBuilder != null;
    }

    /**
      * Clears the value of the 'detailsBlock' field.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder clearDetailsBlock() {
      detailsBlock = null;
      detailsBlockBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'retries' field.
      * @return The value.
      */
    public int getRetries() {
      return retries;
    }


    /**
      * Sets the value of the 'retries' field.
      * @param value The value of 'retries'.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder setRetries(int value) {
      validate(fields()[4], value);
      this.retries = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'retries' field has been set.
      * @return True if the 'retries' field has been set, false otherwise.
      */
    public boolean hasRetries() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'retries' field.
      * @return This builder.
      */
    public net.consensys.eventeum.EventBlock.Builder clearRetries() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EventBlock build() {
      try {
        EventBlock record = new EventBlock();
        record.id = fieldSetFlags()[0] ? this.id : (String) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (String) defaultValue(fields()[1]);
        if (detailsBuilder != null) {
          try {
            record.details = this.detailsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("details"));
            throw e;
          }
        } else {
          record.details = fieldSetFlags()[2] ? this.details : (net.consensys.eventeum.ContractEventDetails) defaultValue(fields()[2]);
        }
        if (detailsBlockBuilder != null) {
          try {
            record.detailsBlock = this.detailsBlockBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("detailsBlock"));
            throw e;
          }
        } else {
          record.detailsBlock = fieldSetFlags()[3] ? this.detailsBlock : (net.consensys.eventeum.BlockDetails) defaultValue(fields()[3]);
        }
        record.retries = fieldSetFlags()[4] ? this.retries : (Integer) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EventBlock>
    WRITER$ = (org.apache.avro.io.DatumWriter<EventBlock>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EventBlock>
    READER$ = (org.apache.avro.io.DatumReader<EventBlock>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










